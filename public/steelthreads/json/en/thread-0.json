{
  "id": 0,
  "title": "Integrating two RESTful web services",
  "descriptionDoc": "thread-0-description.adoc",
  "prerequisites": [
    "Access to an OpenShift instance with Integreatly components installed",
    "A GitHub account configured with an OAuth App to use the Integreatly Launcher instance."
  ],
  "estimatedTime": 50,
  "roles": ["Operator", "Developer"],
  "applications": ["Red Hat OpenShift Application Runtimes", "Eclipse Che", "Fuse Ignite", "EnMasse"],
  "tasks": [
    {
      "title": "Creating an EnMasse space",
      "description": "EnMasse simplifies running messaging infrastructure for your organization. You use it to provide messaging services from a Node.js app to a Spring Boot app.",
      "estimatedTime": 6,
      "steps": [
        {
          "stepDoc": "setting-up-enmasse.adoc",
          "infoVerifications": ["setting-up-enmasse-verification.adoc"],
          "attributes": {
            "enmasse-url": "https://console-enmasse.cluster-lfa3xlh.opentry.me/console/eval"
          }
        }
      ]
    },
    {
      "title": "Creating EnMasse Binding",
      "description": "To use EnMasse, you must create an OpenShift binding.",
      "estimatedTime": 5,
      "steps": [
        {
          "stepDoc": "creating-enmasse-binding.adoc",
          "infoVerifications": ["creating-enmasse-binding-verification.adoc"],
          "attributes": {
            "enmasse-url": "https://console-enmasse.cluster-lfa3xlh.opentry.me/console/eval"
          }
        }
      ]
    },
    {
      "title": "Creating addresses in EnMasse space",
      "description": "You create two addresses in EnMasse to route messages to the Spring Boot app.",
      "estimatedTime": 5,
      "steps": [
        {
          "stepDoc": "creating-addresses.adoc",
          "infoVerifications": ["creating-addresses-verification.adoc"],
          "attributes": {
            "enmasse-url": "https://console-enmasse.cluster-lfa3xlh.opentry.me/console/eval"
          }
        }
      ]
    },
    {
      "title": "Running a Node.js messaging app",
      "description": "The Red Hat Developer Launcher enables you to build and deploy applications on OpenShift. In this procedure, you deploy an example Node.js application that is pre-configured to provide a REST API that returns a list of fruit.",
      "estimatedTime": 5,
      "steps": [
        {
          "stepDoc": "running-node-app.adoc",
          "infoVerifications": ["running-node-app-verification.adoc"],
          "attributes": {
            "launcher-url": "http://launcher-launcher.cluster-lfa3xlh.opentry.me/",
            "openshift-url": "https://cluster-lfa3xlh.opentry.me"
          }
        }
      ]
    },
    {
      "title": "Editing the Node.js messaging app",
      "description": "Che allows you edit the source code for your Node.js app in the browser.",
      "estimatedTime": 5,
      "steps": [
        {
          "stepDoc": "editing-node-app-with-che.adoc",
          "infoVerifications": ["editing-node-app-with-che-verification.adoc"],
          "attributes": {
            "launcher-url": "http://launcher-launcher.cluster-lfa3xlh.opentry.me/",
            "openshift-url": "https://cluster-lfa3xlh.opentry.me"
          }
        }
      ]
    },
    {
      "title": "Running a Spring Boot CRUD app",
      "description": "In this procedure, you deploy an example Spring Boot CRUD application that is pre-configured to act as a simple grocery inventory application.",
      "estimatedTime": 5,
      "steps": [
        {
          "stepDoc": "running-spring-app.adoc",
          "infoVerifications": ["running-spring-app-verification.adoc"],
          "attributes": {
            "launcher-url": "http://launcher-launcher.cluster-lfa3xlh.opentry.me/",
            "openshift-url": "https://cluster-lfa3xlh.opentry.me"
          }
        }
      ]
    },
    {
      "title": "Creating AMQP connection in Fuse Ignite",
      "description": "To receive messages from EnMasse, you must create a connection in Fuse Ignite.",
      "estimatedTime": 5,
      "steps": [
        {
          "stepDoc": "creating-amqp-connection-in-fuse.adoc",
          "infoVerifications": ["creating-amqp-connection-in-fuse-verification.adoc"],
          "attributes": {
            "openshift-url": "https://cluster-lfa3xlh.opentry.me",
            "fuse-online-url": "https://cluster-lfa3xlh.opentry.me"
          }
        }
      ]
    },
    {
      "title": "Creating HTTP connection in Fuse Ignite",
      "description": "To send messages to the Spring Boot app, you must create a connection in Fuse Ignite.",
      "estimatedTime": 6,
      "steps": [
        {
          "stepDoc": "creating-http-connection-in-fuse.adoc",
          "infoVerifications": ["creating-http-connection-in-fuse-verification.adoc"],
          "attributes": {
            "fuse-online-url": "https://cluster-lfa3xlh.opentry.me"
          }
        }
      ]
    },
    {
      "title": "Creating Integration in Fuse Ignite",
      "description": "To use the Fuse connections, you must create an integration in Fuse Ignite.",
      "estimatedTime": 5,
      "steps": [
        {
          "stepDoc": "creating-fuse-integration.adoc",
          "infoVerifications": ["creating-fuse-integration-verification.adoc"],
          "attributes": {
            "fuse-online-url": "https://cluster-lfa3xlh.opentry.me"
          }
        }
      ]
    },
    {
      "title": "Using the application integration",
      "description": "After setting up the integration between the Node.js and Spring Boot applications, we can use the integration to create a new fruit for the grocery inventory application.",
      "estimatedTime": 5,
      "steps": [
        {
          "stepDoc": "using-integration.adoc",
          "successVerifications": ["using-integration-verification.adoc"],
          "attributes": {
            "fuse-online-url": "https://cluster-lfa3xlh.opentry.me"
          }
        }
      ]
    }
  ]
}
